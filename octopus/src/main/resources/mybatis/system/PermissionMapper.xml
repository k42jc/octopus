<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dafy.octopus.auth.mapper.PermissionMapper" >
  <resultMap id="BaseResultMap" type="com.dafy.octopus.web.core.dto.Permission" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <id column="parentId" property="parentId" jdbcType="BIGINT" />
    <result column="p_code" property="pCode" jdbcType="VARCHAR" />
    <result column="p_name" property="pName" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,parentId, p_code, p_name, `desc`, create_time, update_time
  </sql>
  <select id="findAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from T_PERMISSION
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from T_PERMISSION
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from T_PERMISSION
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.dafy.octopus.web.core.dto.Permission" >
    insert into T_PERMISSION (id, p_code, p_name, 
      desc, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{pCode,jdbcType=VARCHAR}, #{pName,jdbcType=VARCHAR}, 
      #{desc,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dafy.octopus.web.core.dto.Permission" >
    insert into T_PERMISSION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="pCode != null" >
        p_code,
      </if>
      <if test="pName != null" >
        p_name,
      </if>
      <if test="desc != null" >
        `desc`,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="pCode != null" >
        #{pCode,jdbcType=VARCHAR},
      </if>
      <if test="pName != null" >
        #{pName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.dafy.octopus.web.core.dto.Permission" >
    update T_PERMISSION
    <set >
      <if test="pCode != null" >
        p_code = #{pCode,jdbcType=VARCHAR},
      </if>
      <if test="pName != null" >
        p_name = #{pName,jdbcType=VARCHAR},
      </if>
      <if test="desc != null" >
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dafy.octopus.web.core.dto.Permission" >
    update T_PERMISSION
    set p_code = #{pCode,jdbcType=VARCHAR},
      p_name = #{pName,jdbcType=VARCHAR},
      desc = #{desc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getUserPermissions" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select p.* from T_PERMISSION p
    INNER JOIN T_ROLE_PERMISSION rp on p.id=rp.permission_id
    INNER JOIN T_USER_ROLE ur on rp.role_id=ur.role_id
    where ur.user_id=#{userId}
  </select>

  <select id="findAllPage" resultMap="BaseResultMap">
    select * from T_PERMISSION /*p LEFT JOIN T_ROLE_PERMISSION rp on */
  </select>


</mapper>